overlay: 1.0.0
info:
  title: CodeSamples overlay for python target
  version: 0.0.0
actions:
  - target: $["paths"]["/text-to-image"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: text_to_image
          source: |-
            from livepeer_ai import LivepeerAI

            s = LivepeerAI(
                http_bearer="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.text_to_image(request={
                "prompt": "<value>",
            })

            if res.image_response is not None:
                # handle response
                pass
  - target: $["paths"]["/image-to-image"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: image_to_image
          source: |-
            from livepeer_ai import LivepeerAI

            s = LivepeerAI(
                http_bearer="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.image_to_image(request={
                "prompt": "<value>",
                "image": {
                    "file_name": "your_file_here",
                    "content": open("<file_path>", "rb"),
                },
            })

            if res.image_response is not None:
                # handle response
                pass
  - target: $["paths"]["/image-to-video"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: image_to_video
          source: |-
            from livepeer_ai import LivepeerAI

            s = LivepeerAI(
                http_bearer="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.image_to_video(request={
                "image": {
                    "file_name": "your_file_here",
                    "content": open("<file_path>", "rb"),
                },
            })

            if res.video_response is not None:
                # handle response
                pass
  - target: $["paths"]["/upscale"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: upscale
          source: |-
            from livepeer_ai import LivepeerAI

            s = LivepeerAI(
                http_bearer="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.upscale(request={
                "prompt": "<value>",
                "image": {
                    "file_name": "your_file_here",
                    "content": open("<file_path>", "rb"),
                },
            })

            if res.image_response is not None:
                # handle response
                pass
  - target: $["paths"]["/audio-to-text"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: audio_to_text
          source: |-
            from livepeer_ai import LivepeerAI

            s = LivepeerAI(
                http_bearer="<YOUR_BEARER_TOKEN_HERE>",
            )


            res = s.audio_to_text(request={
                "audio": {
                    "file_name": "your_file_here",
                    "content": open("<file_path>", "rb"),
                },
            })

            if res.text_response is not None:
                # handle response
                pass
